<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
      					http://www.springframework.org/schema/beans/spring-beans.xsd"
	default-autowire="byName">
	
	<bean id="imageCaptchaService" class="com.octo.captcha.service.multitype.GenericManageableCaptchaService">
		<constructor-arg index="0" ref="imageEngine" />
		<constructor-arg type="int" index="1" value="180" /> <!-- minGuarantedStorageDelayInSeconds -->
		<constructor-arg type="int" index="2" value="180000" /> <!-- maxCaptchaStoreSize -->
		<constructor-arg type="int" index="3" value="75000" /> <!-- captchaStoreLoadBeforeGarbageCollection -->
	</bean>
	<bean id="captchaService" class="com.octo.captcha.service.multitype.GenericManageableCaptchaService">
		<constructor-arg index="0" ref="imageEngine" />
		<constructor-arg type="int" index="1" value="180" /> <!-- minGuarantedStorageDelayInSeconds -->
		<constructor-arg type="int" index="2" value="180000" /> <!-- maxCaptchaStoreSize -->
		<constructor-arg type="int" index="3" value="75000" /> <!-- captchaStoreLoadBeforeGarbageCollection -->
	</bean>
	<bean id="imageEngine" class="com.octo.captcha.engine.GenericCaptchaEngine">
		<description>图片引擎</description>
		<constructor-arg index="0">
			<list>
				<ref bean="captchaFactory" />
			</list>
		</constructor-arg>
	</bean>
	
	<bean id="captchaFactory" class="com.octo.captcha.image.gimpy.GimpyFactory">
		<description>验证码工厂</description>
		<constructor-arg>
			<ref bean="wordgen" />
		</constructor-arg>
		<constructor-arg>
			<ref bean="wordtoimage" />
		</constructor-arg>
		<constructor-arg>
			<value>false</value><!-- 大小写是否敏感 -->
		</constructor-arg>
	</bean>

	<bean id="wordgen" class="com.octo.captcha.component.word.wordgenerator.RandomWordGenerator">
		<description>文字产生器</description>
		<constructor-arg index="0">
			<value>ABCDEFGHIJKLMNOPQRSTUVWXYZ</value>
		</constructor-arg>
	</bean>

	<bean id="wordtoimage" class="com.octo.captcha.component.image.wordtoimage.DeformedComposedWordToImage">
		<description>文字转图片</description>
		<constructor-arg index="0">
			<ref bean="fontGenRandom" />
		</constructor-arg>
		<constructor-arg index="1">
			<ref bean="backGenUni" />
		</constructor-arg>
		<constructor-arg index="2">
			<ref bean="glyphsPaster" />
		</constructor-arg>
		<constructor-arg index="3">
			<ref bean="backgroundDeformation" />
		</constructor-arg>
		<constructor-arg index="4">
			<ref bean="textDeformation" />
		</constructor-arg>
		<constructor-arg index="5">
			<ref bean="finalDeformation" />
		</constructor-arg>
	</bean>
	<bean id="backgroundDeformation"
		class="com.octo.captcha.component.image.deformation.ImageDeformationByFilters">
		<constructor-arg index="0">
			<list>
				<ref bean="blankImageFilter" />
			</list>
		</constructor-arg>
	</bean>
	<bean id="textDeformation"
		class="com.octo.captcha.component.image.deformation.ImageDeformationByBufferedImageOp">
		<constructor-arg index="0">
			<list>
				<ref bean="pinchFilter1" />
				<ref bean="pinchFilter2" />
				<!-- <ref bean="pinchFilter3" /> -->
			</list>
		</constructor-arg>
	</bean>
	<bean id="finalDeformation"
		class="com.octo.captcha.component.image.deformation.ImageDeformationByFilters">
		<constructor-arg index="0">
			<list>
				<ref bean="blankImageFilter" />
			</list>
		</constructor-arg>
	</bean>
	
	<bean id="pinchFilter1" class="com.jhlabs.image.PinchFilter">
		<property name="amount" value="-0.5f"></property>
		<property name="radius" value="20"></property>
		<property name="angle" value="0.1964f"></property>
		<property name="centreX" value="0.5f"></property>
		<property name="centreY" value="-0.01f"></property>
		<property name="edgeAction" value="1"></property>
	</bean>
	<bean id="pinchFilter2" class="com.jhlabs.image.PinchFilter">
		<property name="amount" value="-0.6f"></property>
		<property name="radius" value="20"></property>
		<property name="angle" value="0.1964f"></property>
		<property name="centreX" value="0.3f"></property>
		<property name="centreY" value="1.01f"></property>
		<property name="edgeAction" value="1"></property>
	</bean>
	<bean id="pinchFilter3" class="com.jhlabs.image.PinchFilter">
		<property name="amount" value="-0.6f"></property>
		<property name="radius" value="20"></property>
		<property name="angle" value="0.1964f"></property>
		<property name="centreX" value="0.8f"></property>
		<property name="centreY" value="-0.01f"></property>
		<property name="edgeAction" value="1"></property>
	</bean>
	<bean id="blankImageFilter" class="java.awt.image.ImageFilter">
	</bean>
	
	<bean id="fontGenRandom" class="com.octo.captcha.component.image.fontgenerator.RandomFontGenerator">
		<description>字体生成器</description>
		<constructor-arg index="0">
			<value>20</value><!-- 字体最小大小 -->
		</constructor-arg>
		<constructor-arg index="1">
			<value>20</value><!-- 字体最大大小 -->
		</constructor-arg>
		<constructor-arg index="2">
			<list>
				<!-- <ref bean="fontArial" /> --><!-- 所使用的字体集合 -->
				<ref bean="fontBellMt" />
				<ref bean="fontCreditValley" />
			</list>
		</constructor-arg>
	</bean>
	<bean id="backGenUni" class="com.octo.captcha.component.image.backgroundgenerator.UniColorBackgroundGenerator">
		<description>背景图片生成器</description>
		<constructor-arg index="0">
			<value>50</value>
		</constructor-arg>
		<constructor-arg index="1">
			<value>22</value>
		</constructor-arg>
		<constructor-arg index="2">
			<ref bean="colorWhite" />
		</constructor-arg>
	</bean>
	
	<bean id="glyphsPaster" class="com.octo.captcha.component.image.textpaster.GlyphsPaster">
		<constructor-arg type="java.lang.Integer" index="0">
			<value>4</value>
		</constructor-arg>
		<constructor-arg type="java.lang.Integer" index="1">
			<value>4</value>
		</constructor-arg>
		<constructor-arg index="2">
			<ref bean="color4" />
		</constructor-arg>
		<constructor-arg index="3">
			<array>
				<ref bean="translateGlyphsVerticalRandomVisitor" />
				<ref bean="overlapGlyphsUsingShapeVisitor" />
				<ref bean="translateAllToRandomPointVisitor" /> 
			</array>
		</constructor-arg>
		<!-- <constructor-arg index="4">
			<array>
				<ref bean="randomLinesGlyphsDecorator" />
				<ref bean="baffleGlyphsDecorator" />
			</array>
		</constructor-arg> -->
	</bean>
	<bean id="translateGlyphsVerticalRandomVisitor" class="com.octo.captcha.component.image.textpaster.glyphsvisitor.TranslateGlyphsVerticalRandomVisitor">
		<constructor-arg type="double" index="0">
			<value>1</value>
		</constructor-arg>
	</bean>
	<bean id="overlapGlyphsUsingShapeVisitor" class="com.octo.captcha.component.image.textpaster.glyphsvisitor.OverlapGlyphsUsingShapeVisitor">
		<constructor-arg type="double" index="0">
			<value>1</value>
		</constructor-arg>
	</bean>
	<bean id="translateAllToRandomPointVisitor" class="com.octo.captcha.component.image.textpaster.glyphsvisitor.TranslateAllToRandomPointVisitor">
		<constructor-arg type="double" index="0">
			<value>0</value>
		</constructor-arg>
		<constructor-arg type="double" index="1">
			<value>0</value>
		</constructor-arg>
	</bean>
	
	<bean id="randomLinesGlyphsDecorator" class="com.octo.captcha.component.image.textpaster.glyphsdecorator.RandomLinesGlyphsDecorator">
		<constructor-arg type="double" index="0">
			<value>1.2</value>
		</constructor-arg>
		<constructor-arg index="1">
			<ref bean="randomListColorGenerator" />
		</constructor-arg>
		<constructor-arg type="double" index="2">
			<value>2</value>
		</constructor-arg>
		<constructor-arg type="double" index="3">
			<value>25</value>
		</constructor-arg>
	</bean>
	
	<bean id="baffleGlyphsDecorator" class="com.octo.captcha.component.image.textpaster.glyphsdecorator.BaffleGlyphsDecorator">
		<constructor-arg type="java.lang.Integer" index="0">
			<value>1</value>
		</constructor-arg>
		<constructor-arg index="1">
			<ref bean="randomListColorGenerator" />
		</constructor-arg>
		<!-- <constructor-arg type="double" index="2">
			<value>2</value>
		</constructor-arg>
		<constructor-arg type="double" index="3">
			<value>25</value>
		</constructor-arg> -->
	</bean>
	
	<bean id="randomListColorGenerator"
		class="com.octo.captcha.component.image.color.RandomListColorGenerator">
		<description>随机颜色生成器</description>
		<constructor-arg index="0">
			<list>
				<ref bean="color1" />
				<ref bean="color2" />
				<ref bean="color3" />
				<ref bean="color4" />
			</list>
		</constructor-arg>
	</bean>
	<bean id="backGroundColorGenerator"
		class="com.octo.captcha.component.image.color.RandomListColorGenerator">
		<description>背景颜色生成器</description>
		<constructor-arg index="0">
			<list>
				<ref bean="colorGray1" />
				<ref bean="colorGray2" />
				<ref bean="colorGray3" />
			</list>
		</constructor-arg>
	</bean>
	<bean id="fontArial" class="java.awt.Font">
		<constructor-arg index="0">
			<value>Arial</value>
		</constructor-arg>
		<constructor-arg index="1">
			<value>0</value>
		</constructor-arg>
		<constructor-arg index="2">
			<value>40</value>
		</constructor-arg>
	</bean>
	<bean id="fontBellMt" class="java.awt.Font">
		<constructor-arg index="0">
			<value>Bell MT</value>
		</constructor-arg>
		<constructor-arg index="1">
			<value>0</value>
		</constructor-arg>
		<constructor-arg index="2">
			<value>40</value>
		</constructor-arg>
	</bean>
	<bean id="fontCreditValley" class="java.awt.Font">
		<constructor-arg index="0">
			<value>Credit valley</value>
		</constructor-arg>
		<constructor-arg index="1">
			<value>0</value>
		</constructor-arg>
		<constructor-arg index="2">
			<value>40</value>
		</constructor-arg>
	</bean>
	<bean id="colorWhite" class="java.awt.Color">
		<constructor-arg type="int" index="0">
			<value>255</value>
		</constructor-arg>
		<constructor-arg type="int" index="1">
			<value>255</value>
		</constructor-arg>
		<constructor-arg type="int" index="2">
			<value>255</value>
		</constructor-arg>
	</bean>
	<bean id="colorBlack" class="java.awt.Color">
		<constructor-arg type="int" index="0">
			<value>0</value>
		</constructor-arg>
		<constructor-arg type="int" index="1">
			<value>0</value>
		</constructor-arg>
		<constructor-arg type="int" index="2">
			<value>0</value>
		</constructor-arg>
	</bean>
	<bean id="colorGray1" class="java.awt.Color">
		<constructor-arg type="int" index="0">
			<value>255</value>
		</constructor-arg>
		<constructor-arg type="int" index="1">
			<value>255</value>
		</constructor-arg>
		<constructor-arg type="int" index="2">
			<value>255</value>
		</constructor-arg>
	</bean>
	<bean id="colorGray2" class="java.awt.Color">
		<constructor-arg type="int" index="0">
			<value>251</value>
		</constructor-arg>
		<constructor-arg type="int" index="1">
			<value>252</value>
		</constructor-arg>
		<constructor-arg type="int" index="2">
			<value>217</value>
		</constructor-arg>
	</bean>
	<bean id="colorGray3" class="java.awt.Color">
		<constructor-arg type="int" index="0">
			<value>224</value>
		</constructor-arg>
		<constructor-arg type="int" index="1">
			<value>233</value>
		</constructor-arg>
		<constructor-arg type="int" index="2">
			<value>242</value>
		</constructor-arg>
	</bean>
	<bean id="color1" class="java.awt.Color">
		<constructor-arg type="int" index="0">
			<value>243</value>
		</constructor-arg>
		<constructor-arg type="int" index="1">
			<value>96</value>
		</constructor-arg>
		<constructor-arg type="int" index="2">
			<value>69</value>
		</constructor-arg>
	</bean>
	<bean id="color2" class="java.awt.Color">
		<constructor-arg type="int" index="0">
			<value>248</value>
		</constructor-arg>
		<constructor-arg type="int" index="1">
			<value>202</value>
		</constructor-arg>
		<constructor-arg type="int" index="2">
			<value>77</value>
		</constructor-arg>
	</bean>
	<bean id="color3" class="java.awt.Color">
		<constructor-arg type="int" index="0">
			<value>63</value>
		</constructor-arg>
		<constructor-arg type="int" index="1">
			<value>86</value>
		</constructor-arg>
		<constructor-arg type="int" index="2">
			<value>102</value>
		</constructor-arg>
	</bean>
	<bean id="color4" class="java.awt.Color">
		<constructor-arg type="int" index="0">
			<value>47</value>
		</constructor-arg>
		<constructor-arg type="int" index="1">
			<value>52</value>
		</constructor-arg>
		<constructor-arg type="int" index="2">
			<value>64</value>
		</constructor-arg>
	</bean>
</beans>