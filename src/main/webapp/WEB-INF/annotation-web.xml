<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	id="WebApp_ID" version="3.0">
	<display-name>web</display-name>
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
	</welcome-file-list>
	<!-- Configure ContextLoaderListener to use AnnotationConfigWebApplicationContext instead of the default 
		XmlWebApplicationContext -->
	<context-param>
		<param-name>contextClass</param-name>
		<param-value> org.springframework.web.context.support.AnnotationConfigWebApplicationContext </param-value>
	</context-param>
	<!-- Configuration locations must consist of one or more comma- or space-delimited fully-qualified @Configuration 
		classes. Fully-qualified packages may also be specified for component-scanning -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>com.joonje.spring.AppConfig</param-value>
	</context-param>
	<!-- Bootstrap the root application context as usual using ContextLoaderListener -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- Declare a Spring MVC DispatcherServlet as usual -->
	<servlet>
		<servlet-name>dispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- Configure DispatcherServlet to use AnnotationConfigWebApplicationContext instead of the default 
			XmlWebApplicationContext -->
		<init-param>
			<param-name>contextClass</param-name>
			<param-value>org.springframework.web.context.support.AnnotationConfigWebApplicationContext </param-value>
		</init-param>
		<!-- Again, config locations must consist of one or more comma- or space-delimited and fully-qualified 
			@Configuration classes -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>com.joonje.WebConfig</param-value>
		</init-param>
	</servlet>
	<!-- map all requests for /app/* to the dispatcher servlet -->
	<servlet-mapping>
		<servlet-name>dispatcher</servlet-name>
		<url-pattern>/app/*</url-pattern>
	</servlet-mapping>
	<context-param>
       <param-name>webAppRootKey</param-name>
       <param-value>webapp.root</param-value>
    </context-param>
	<!-- <context-param>
	    <param-name>logbackConfigLocation</param-name>
	    <param-value>classpath:logback.xml</param-value>
	</context-param> -->
	<!-- <listener>
	    <listener-class>org.springframework.web.util.WebAppRootListener</listener-class>
	</listener> -->
</web-app>